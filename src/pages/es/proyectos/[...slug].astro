---
import { type CollectionEntry, getCollection } from 'astro:content';

import BaseLayout from '../../../layouts/es/BaseLayout.astro';

import ContactCTA from '../../../components/es/ContactCTA.astro';
import Hero from '../../../components/es/Hero.astro';
import Icon from '../../../components/es/Icon.astro';
import Pill from '../../../components/es/Pill.astro';

interface Props {
	entry: CollectionEntry<'proyectos'>;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export const prerender = true;

export async function getStaticPaths() {
    const work = await getCollection('proyectos');
    console.log('Retrieved work collection:', work);
    return work.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}



const { entry } = Astro.props;
if (!entry) {
    throw new Error("Entry not found. Check if the slug is correctly passed in getStaticPaths.");
}
const { Content } = await entry.render();

const height = 300;

---

<BaseLayout title={entry.data.title} description={entry.data.description}>
	<div class="stack gap-20">
		<div class="stack gap-15">
			<header>
				<div class="wrapper stack gap-2">
					<a class="back-link" href="es/proyectos/"><Icon icon="arrow-left" /> Proyectos</a>
					<Hero title={entry.data.title} align="start">
						<div class="details">
							<div class="tags">
								{entry.data.tags.map((t) => <Pill>{t}</Pill>)}
							</div>
							<p class="description">{entry.data.description}</p>
						</div>
					</Hero>
				</div>
			</header>
			<main class="wrapper">
				<div class="stack gap-10 content">
					{entry.data.img && <img src={entry.data.img} alt={entry.data.img_alt || ''} />}
					<div class="content">
							<Content />
					</div>
				</div>
				
				<div class="screenshots">
					{entry.data.screenshots?.map((s) => <img src={s} alt="" />)}					
				</div>
				<!-- Only display video div if it exists -->
				{entry.data.video && <div class="video">
					<iframe
						class="responsive-iframe"
						src={entry.data.video}
						title="YouTube video player"
						frameborder="0"
						allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
						allowfullscreen
					></iframe>
				</div>}
				
			</main>
		</div>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	.screenshots {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		margin-top: 5vh;
	}

	.video {
		position: relative;
		overflow: hidden;
		width: 100%;
		padding-top: 56.25%; /* 16:9 Aspect Ratio (divide 9 by 16 = 0.5625) */
		margin-top: 5vh;
		border-radius: 1.5rem;
	}

	.responsive-iframe {
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		width: 100%;
		height: 100%;
		border-radius: 1.5rem;
	}
	.screenshots img {
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.screenshots img:hover {
		transform: scale(1.01);
		transition: transform 0.2s ease-in-out;
	}

	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	.back-link {
		display: none;
	}

	.details {
		display: flex;
		flex-direction: column;
		padding: 0.5rem;
		gap: 1.5rem;
		justify-content: space-between;
		align-items: center;
	}

	.tags {
		display: flex;
		gap: 0.5rem;
	}

	.description {
		font-size: var(--text-lg);
		max-width: 54ch;
	}

	.content {
		max-width: 65ch;
		margin-inline: auto;
	}

	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5) {
		margin: 1.5rem 0;
	}

	.content :global(img) {
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
	}

	.back-link,
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.back-link:hover,
	.back-link:focus,
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	@media (min-width: 50em) {
		.back-link {
			display: block;
			align-self: flex-start;
		}

		.details {
			flex-direction: row;
			gap: 2.5rem;
		}

		.content :global(blockquote) {
			font-size: var(--text-2xl);
		}
	}
</style>
